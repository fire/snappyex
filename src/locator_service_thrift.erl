%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(locator_service_thrift).
-behaviour(thrift_service).


-include("locator_service_thrift.hrl").

-export([struct_info/1, function_info/2, function_names/0]).

struct_info(_) -> erlang:error(function_clause).
%%% interface
% getPreferredServer(This, ServerTypes, ServerGroups, FailedServers)
function_info('getPreferredServer', params_type) ->
  {struct, [{1, {set, i32}},
          {2, {set, string}},
          {3, {set, {struct, {'snappydata_types', 'HostAddress'}}}}]}
;
function_info('getPreferredServer', reply_type) ->
  {struct, {'snappydata_types', 'HostAddress'}};
function_info('getPreferredServer', exceptions) ->
  {struct, [{1, {struct, {'snappydata_types', 'SnappyException'}}}]}
;
% getAllServersWithPreferredServer(This, ServerTypes, ServerGroups, FailedServers)
function_info('getAllServersWithPreferredServer', params_type) ->
  {struct, [{1, {set, i32}},
          {2, {set, string}},
          {3, {set, {struct, {'snappydata_types', 'HostAddress'}}}}]}
;
function_info('getAllServersWithPreferredServer', reply_type) ->
  {list, {struct, {'snappydata_types', 'HostAddress'}}};
function_info('getAllServersWithPreferredServer', exceptions) ->
  {struct, [{1, {struct, {'snappydata_types', 'SnappyException'}}}]}
;
% closeConnection(This)
function_info('closeConnection', params_type) ->
  {struct, []}
;
function_info('closeConnection', reply_type) ->
  oneway_void;
function_info('closeConnection', exceptions) ->
  {struct, []}
;
function_info(_Func, _Info) -> erlang:error(function_clause).

function_names() -> 
  ['getPreferredServer', 'getAllServersWithPreferredServer', 'closeConnection'].

